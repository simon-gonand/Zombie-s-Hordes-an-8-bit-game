                              1 ; (c) 2005-2009 Philipp Krause pkk@spth.de
                              2 
                              3 ;	This library is free software; you can redistribute it and/or modify it
                              4 ;	under the terms of the GNU Library General Public License as published by the
                              5 ;	Free Software Foundation; either version 2, or (at your option) any
                              6 ;	later version.
                              7    
                              8 ;	This library is distributed in the hope that it will be useful,
                              9 ;	but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;	GNU Library General Public License for more details.
                             12    
                             13 ;	You should have received a copy of the GNU Library General Public License
                             14 ;	along with this program; if not, write to the Free Software
                             15 ;	Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
                             16 
                             17 .module cv_vdpout
                             18 
                             19 .globl _cv_vdpout
                             20 
                             21 ; void vdpout(const u_int8_t reg, const u_int8_t data1)
                             22 
   0000                      23 _cv_vdpout:
   0000 E1            [10]   24 	pop hl
   0001 C1            [10]   25 	pop bc				; reg in c, data in b
   0002 C5            [11]   26 	push bc
   0003                      27 write:
   0003 DB BF         [11]   28 	in a, (0xbf)			; Read status port to reset register access counter.
   0005 AF            [ 4]   29 	xor a, a
   0006 32r00r00      [13]   30 	ld (#_cv_vint_indicator), a
   0009 78            [ 4]   31 	ld a, b
   000A D3 BF         [11]   32 	out(0xbf), a			; write data
   000C 3E 80         [ 7]   33 	ld a, #0x80			; set most significant bit - assume second most significant bit is cleared.
   000E B1            [ 4]   34 	or a, c
   000F D3 BF         [11]   35 	out(0xbf), a			; choose register to update with data
   0011 3Ar00r00      [13]   36 	ld a, (#_cv_vint_indicator)
   0014 B7            [ 4]   37 	or a, a
   0015 20 EC         [12]   38 	jr nz, write
   0017 E9            [ 4]   39 	jp (hl)				; return
                             40 
