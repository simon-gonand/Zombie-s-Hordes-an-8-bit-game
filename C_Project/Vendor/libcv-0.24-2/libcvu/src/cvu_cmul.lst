                              1 ; (c) 2010 Philipp Klaus Krause philipp@colecovision.eu
                              2 
                              3 ;	This library is free software; you can redistribute it and/or modify it
                              4 ;	under the terms of the GNU Library General Public License as published by the
                              5 ;	Free Software Foundation; either version 2, or (at your option) any
                              6 ;	later version.
                              7    
                              8 ;	This library is distributed in the hope that it will be useful,
                              9 ;	but WITHOUT ANY WARRANTY; without even the implied warranty of
                             10 ;	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                             11 ;	GNU Library General Public License for more details.
                             12    
                             13 ;	You should have received a copy of the GNU Library General Public License
                             14 ;	along with this program; if not, write to the Free Software
                             15 ;	Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
                             16 
                             17 .module cvu_cmul
                             18 
                             19 .globl _cvu_cmul
                             20 
                             21 ; void cvu_cmul(struct cvu_c * l, const struct cvu_c * r)
                             22 ;{
                             23 ;	cvu_f tmp;
                             24 ;	tmp = fmul2(l->r, r->r) - fmul2(l->i, r->i);
                             25 ;	l->i = fmul2(l->r, r->i) + fmul2(r->r, l->i);
                             26 ;	l->r = tmp;
                             27 ;}
                             28 
   0000                      29 _cvu_cmul:
                             30 	; Get l into ix, r into iy.
   0000 DD E5         [15]   31 	push	ix
   0002 C1            [10]   32 	pop	bc
   0003 E1            [10]   33 	pop	hl
   0004 DD E1         [14]   34 	pop	ix
   0006 FD E1         [14]   35 	pop	iy
   0008 FD E5         [15]   36 	push	iy
   000A DD E5         [15]   37 	push	ix
   000C E5            [11]   38 	push	hl
   000D C5            [11]   39 	push	bc
                             40 
                             41 	; Multiply imaginary components
   000E FD E5         [15]   42 	push iy
   0010 FD 6E 02      [19]   43 	ld	l,2 (iy)
   0013 FD 66 03      [19]   44 	ld	h,3 (iy)
   0016 E5            [11]   45 	push	hl
   0017 DD 6E 02      [19]   46 	ld	l,2 (ix)
   001A DD 66 03      [19]   47 	ld	h,3 (ix)
   001D E5            [11]   48 	push	hl
   001E CDr00r00      [17]   49 	call	_cvu_fmul2
   0021 F1            [10]   50 	pop	af
   0022 F1            [10]   51 	pop	af
   0023 FD E1         [14]   52 	pop	iy
   0025 E5            [11]   53 	push	hl
                             54 	
                             55 	; Multiply real components
   0026 FD E5         [15]   56 	push	iy
   0028 FD 6E 00      [19]   57 	ld	l,0 (iy)
   002B FD 66 01      [19]   58 	ld	h,1 (iy)
   002E E5            [11]   59 	push	hl
   002F DD 6E 00      [19]   60 	ld	l,0 (ix)
   0032 DD 66 01      [19]   61 	ld	h,1 (ix)
   0035 E5            [11]   62 	push	hl
   0036 CDr00r00      [17]   63 	call	_cvu_fmul2
   0039 F1            [10]   64 	pop	af
   003A F1            [10]   65 	pop	af
   003B FD E1         [14]   66 	pop	iy
                             67 	
                             68 	; Get real part of result onto stack.
   003D C1            [10]   69 	pop	bc
   003E AF            [ 4]   70 	xor	a, a
   003F ED 42         [15]   71 	sbc	hl, bc
   0041 E5            [11]   72 	push	hl
                             73 
                             74 	; Mixed multiplication.
   0042 FD E5         [15]   75 	push	iy
   0044 FD 6E 02      [19]   76 	ld	l,2 (iy)
   0047 FD 66 03      [19]   77 	ld	h,3 (iy)
   004A E5            [11]   78 	push	hl
   004B DD 6E 00      [19]   79 	ld	l,0 (ix)
   004E DD 66 01      [19]   80 	ld	h,1 (ix)
   0051 E5            [11]   81 	push	hl
   0052 CDr00r00      [17]   82 	call	_cvu_fmul2
   0055 F1            [10]   83 	pop	af
   0056 F1            [10]   84 	pop	af
   0057 FD E1         [14]   85 	pop	iy
   0059 E5            [11]   86 	push	hl
                             87 
                             88 	; Mixed multiplication.
   005A FD 6E 00      [19]   89 	ld	l,0 (iy)
   005D FD 66 01      [19]   90 	ld	h,1 (iy)
   0060 E5            [11]   91 	push	hl
   0061 DD 6E 02      [19]   92 	ld	l,2 (ix)
   0064 DD 66 03      [19]   93 	ld	h,3 (ix)
   0067 E5            [11]   94 	push	hl
   0068 CDr00r00      [17]   95 	call	_cvu_fmul2
   006B F1            [10]   96 	pop	af
   006C F1            [10]   97 	pop	af
                             98 
                             99 	; Get imaginary part of result into hl.
   006D C1            [10]  100 	pop	bc
   006E 09            [11]  101 	add	hl,bc
                            102 
                            103 	; Store imaginary part of result.
   006F DD 75 02      [19]  104 	ld	2 (ix), l
   0072 DD 74 03      [19]  105 	ld	3 (ix), h
                            106 
                            107 	; Store real part of result.
   0075 E1            [10]  108 	pop	hl
   0076 DD 75 00      [19]  109 	ld	0 (ix), l
   0079 DD 74 01      [19]  110 	ld	1 (ix), h
                            111 
   007C DD E1         [14]  112 	pop	ix
   007E C9            [10]  113 	ret
                            114 
