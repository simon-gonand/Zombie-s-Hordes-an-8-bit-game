                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 4.0.0 #11528 (CYGWIN)
                              4 ;--------------------------------------------------------
                              5 	.module cvu_get_lzk
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _cvu_get_lzk
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                     00BE    15 _cv_graphics_port	=	0x00be
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                             39 	.area _HOME
                             40 ;--------------------------------------------------------
                             41 ; code
                             42 ;--------------------------------------------------------
                             43 	.area _CODE
                             44 ;src/cvu_get_lzk.c:19: static void ringbuffer_insert(struct cvu_lzk_state *state, const uint8_t c)
                             45 ;	genLabel
                             46 ;	genFunction
                             47 ;	---------------------------------
                             48 ; Function ringbuffer_insert
                             49 ; ---------------------------------
                             50 ;	Register assignment might be sub-optimal.
                             51 ; Stack space usage: 2 bytes.
   0000                      52 _ringbuffer_insert:
   0000 CDr00r00      [17]   53 	call	___sdcc_enter_ix
   0003 F5            [11]   54 	push	af
                             55 ;src/cvu_get_lzk.c:21: state->buffer[++(state->start)] = c;
                             56 ;	genAssign
                             57 ;	AOP_STK for 
                             58 ;fetchPairLong
   0004 DD 4E 04      [19]   59 	ld	c, 4 (ix)
   0007 DD 46 05      [19]   60 	ld	b, 5 (ix)
                             61 ;	genPlus
                             62 ;	AOP_STK for _ringbuffer_insert_sloc0_1_0
                             63 ;fetchPairLong
                             64 ;fetchLitPair
   000A 21 06 00      [10]   65 	ld	hl, #0x0006
   000D 09            [11]   66 	add	hl, bc
   000E E3            [19]   67 	ex	(sp), hl
                             68 ;	genPlus
   000F 03            [ 6]   69 	inc	bc
   0010 03            [ 6]   70 	inc	bc
   0011 03            [ 6]   71 	inc	bc
   0012 03            [ 6]   72 	inc	bc
   0013 03            [ 6]   73 	inc	bc
                             74 ;	genPointerGet
   0014 0A            [ 7]   75 	ld	a, (bc)
                             76 ;	genPlus
   0015 5F            [ 4]   77 	ld	e, a
   0016 1C            [ 4]   78 	inc	e
                             79 ;	genAssign (pointer)
                             80 ;	isBitvar = 0
   0017 7B            [ 4]   81 	ld	a, e
   0018 02            [ 7]   82 	ld	(bc), a
                             83 ;	genPlus
                             84 ;	AOP_STK for _ringbuffer_insert_sloc0_1_0
                             85 ;fetchPairLong
   0019 E1            [10]   86 	pop	hl
   001A E5            [11]   87 	push	hl
   001B 16 00         [ 7]   88 	ld	d, #0x00
   001D 19            [11]   89 	add	hl, de
                             90 ;	genAssign (pointer)
                             91 ;	AOP_STK for 
                             92 ;	isBitvar = 0
   001E DD 7E 06      [19]   93 	ld	a, 6 (ix)
   0021 77            [ 7]   94 	ld	(hl), a
                             95 ;src/cvu_get_lzk.c:22: state->start %= 64;
                             96 ;	genCast
                             97 ;	genMove_o
                             98 ;	genMove_o
                             99 ;	genMove_o
                            100 ; peephole 1 removed dead load from #0x00 into d.
                            101 ;	genAnd
   0022 7B            [ 4]  102 	ld	a, e
   0023 E6 3F         [ 7]  103 	and	a, #0x3f
                            104 ; peephole 1 removed dead load from #0x00 into d.
                            105 ;	genCast
                            106 ;	genMove_o
                            107 ; peephole 9 loaded a from a directly instead of going through e.
                            108 ;	genMove_o
                            109 ;	genAssign (pointer)
                            110 ;	isBitvar = 0
                            111 ; peephole 9a loaded (bc) from a directly instead of going through a.
   0025 02            [ 7]  112 	ld	(bc), a
                            113 ;	genLabel
                            114 ; peephole 158 removed unused label 00101$.
                            115 ;src/cvu_get_lzk.c:23: }
                            116 ;	genEndFunction
   0026 F1            [10]  117 	pop	af
   0027 DD E1         [14]  118 	pop	ix
   0029 C9            [10]  119 	ret
                            120 ;src/cvu_get_lzk.c:25: static uint8_t ringbuffer_get(struct cvu_lzk_state *state)
                            121 ;	genLabel
                            122 ;	genFunction
                            123 ;	---------------------------------
                            124 ; Function ringbuffer_get
                            125 ; ---------------------------------
                            126 ;	Register assignment might be sub-optimal.
                            127 ; Stack space usage: 2 bytes.
   002A                     128 _ringbuffer_get:
   002A CDr00r00      [17]  129 	call	___sdcc_enter_ix
   002D F5            [11]  130 	push	af
                            131 ;src/cvu_get_lzk.c:28: uint_fast8_t i = (state->start++ + 64 - state->offset);
                            132 ;	genAssign
                            133 ;	AOP_STK for 
                            134 ;fetchPairLong
   002E DD 4E 04      [19]  135 	ld	c, 4 (ix)
   0031 DD 46 05      [19]  136 	ld	b, 5 (ix)
                            137 ;	genPlus
                            138 ;	AOP_STK for _ringbuffer_get_sloc0_1_0
                            139 ;fetchPairLong
                            140 ;fetchLitPair
   0034 21 05 00      [10]  141 	ld	hl, #0x0005
   0037 09            [11]  142 	add	hl, bc
   0038 E3            [19]  143 	ex	(sp), hl
                            144 ;	genPointerGet
                            145 ;	AOP_STK for _ringbuffer_get_sloc0_1_0
                            146 ;fetchPairLong
   0039 E1            [10]  147 	pop	hl
   003A E5            [11]  148 	push	hl
                            149 ;	_moveFrom_tpair_()
   003B 7E            [ 7]  150 	ld	a, (hl)
                            151 ;	genPlus
   003C 5F            [ 4]  152 	ld	e, a
   003D 1C            [ 4]  153 	inc	e
                            154 ;	genAssign (pointer)
                            155 ;	AOP_STK for _ringbuffer_get_sloc0_1_0
                            156 ;	isBitvar = 0
                            157 ;fetchPairLong
   003E E1            [10]  158 	pop	hl
   003F E5            [11]  159 	push	hl
   0040 73            [ 7]  160 	ld	(hl), e
                            161 ;	genCast
                            162 ;	(locations are the same)
                            163 ;	genPlus
   0041 C6 40         [ 7]  164 	add	a, #0x40
   0043 57            [ 4]  165 	ld	d, a
                            166 ;	genAssign
                            167 ;fetchPairLong
   0044 69            [ 4]  168 	ld	l, c
   0045 60            [ 4]  169 	ld	h, b
                            170 ;	genPointerGet
                            171 ;fetchPairLong
   0046 23            [ 6]  172 	inc	hl
   0047 23            [ 6]  173 	inc	hl
   0048 23            [ 6]  174 	inc	hl
   0049 23            [ 6]  175 	inc	hl
                            176 ;	_moveFrom_tpair_()
   004A 6E            [ 7]  177 	ld	l, (hl)
                            178 ;	genCast
                            179 ;	(locations are the same)
                            180 ;	genMinus
   004B 7A            [ 4]  181 	ld	a, d
   004C 95            [ 4]  182 	sub	a, l
                            183 ;src/cvu_get_lzk.c:29: state->start %= 64;
                            184 ;	genCast
                            185 ;	genMove_o
                            186 ;	genMove_o
                            187 ;	genMove_o
                            188 ; peephole 1 removed dead load from #0x00 into d.
                            189 ;	genAnd
   004D F5            [11]  190 	push	af
   004E 7B            [ 4]  191 	ld	a, e
   004F E6 3F         [ 7]  192 	and	a, #0x3f
   0051 5F            [ 4]  193 	ld	e, a
                            194 ; peephole 1 removed dead load from #0x00 into d.
   0052 F1            [10]  195 	pop	af
                            196 ;	genCast
                            197 ;	genMove_o
                            198 ;	genMove_o
                            199 ;	genAssign (pointer)
                            200 ;	AOP_STK for _ringbuffer_get_sloc0_1_0
                            201 ;	isBitvar = 0
                            202 ;fetchPairLong
   0053 E1            [10]  203 	pop	hl
   0054 E5            [11]  204 	push	hl
   0055 73            [ 7]  205 	ld	(hl), e
                            206 ;src/cvu_get_lzk.c:30: i %= 64;
                            207 ;	genCast
                            208 ;	genMove_o
                            209 ;	genMove_o
                            210 ;	genMove_o
                            211 ; peephole 1 removed dead load from #0x00 into d.
                            212 ;	genAnd
                            213 ; peephole 9 loaded a from a directly instead of going through e.
                            214 ; peephole 0 removed redundant load from a into a.
   0056 E6 3F         [ 7]  215 	and	a, #0x3f
                            216 ; peephole 1 removed dead load from #0x00 into e.
                            217 ;	genCast
                            218 ;	genMove_o
   0058 5F            [ 4]  219 	ld	e, a
                            220 ;	genMove_o
                            221 ;src/cvu_get_lzk.c:31: return(state->buffer[i]);
                            222 ;	genPlus
                            223 ;fetchPairLong
                            224 ;fetchLitPair
   0059 21 06 00      [10]  225 	ld	hl, #0x0006
   005C 09            [11]  226 	add	hl, bc
                            227 ;	genPlus
                            228 ;fetchPairLong
   005D 16 00         [ 7]  229 	ld	d, #0x00
   005F 19            [11]  230 	add	hl, de
                            231 ;	genPointerGet
   0060 6E            [ 7]  232 	ld	l, (hl)
                            233 ;	genRet
                            234 ;	genMove_o
                            235 ;	genMove_o
                            236 ;	genLabel
                            237 ; peephole 158 removed unused label 00101$.
                            238 ;src/cvu_get_lzk.c:32: }
                            239 ;	genEndFunction
   0061 F1            [10]  240 	pop	af
   0062 DD E1         [14]  241 	pop	ix
   0064 C9            [10]  242 	ret
                            243 ;src/cvu_get_lzk.c:34: uint8_t cvu_get_lzk(struct cvu_lzk_state *state)
                            244 ;	genLabel
                            245 ;	genFunction
                            246 ;	---------------------------------
                            247 ; Function cvu_get_lzk
                            248 ; ---------------------------------
                            249 ;	Register assignment might be sub-optimal.
                            250 ; Stack space usage: 4 bytes.
   0065                     251 _cvu_get_lzk::
   0065 CDr00r00      [17]  252 	call	___sdcc_enter_ix
   0068 F5            [11]  253 	push	af
   0069 F5            [11]  254 	push	af
                            255 ;src/cvu_get_lzk.c:38: if(state->left)
                            256 ;	genAssign
                            257 ;	AOP_STK for 
                            258 ;fetchPairLong
   006A DD 4E 04      [19]  259 	ld	c, 4 (ix)
   006D DD 46 05      [19]  260 	ld	b, 5 (ix)
                            261 ;	genPlus
                            262 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            263 ;fetchPairLong
                            264 ;fetchLitPair
   0070 21 03 00      [10]  265 	ld	hl, #0x0003
   0073 09            [11]  266 	add	hl, bc
   0074 E3            [19]  267 	ex	(sp), hl
                            268 ;	genPointerGet
                            269 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            270 ;fetchPairLong
   0075 E1            [10]  271 	pop	hl
   0076 E5            [11]  272 	push	hl
                            273 ;	_moveFrom_tpair_()
   0077 7E            [ 7]  274 	ld	a, (hl)
                            275 ;	genIfx
   0078 B7            [ 4]  276 	or	a, a
   0079 C2r22r01      [10]  277 	jp	NZ, 00109$
                            278 ;src/cvu_get_lzk.c:41: next = state->input();
                            279 ;	genPointerGet
                            280 ;fetchPairLong
   007C 69            [ 4]  281 	ld	l, c
   007D 60            [ 4]  282 	ld	h, b
                            283 ;	_moveFrom_tpair_()
   007E 5E            [ 7]  284 	ld	e, (hl)
   007F 23            [ 6]  285 	inc	hl
                            286 ;	_moveFrom_tpair_()
   0080 66            [ 7]  287 	ld	h, (hl)
                            288 ;	genCall
   0081 C5            [11]  289 	push	bc
                            290 ;fetchPairLong
   0082 6B            [ 4]  291 	ld	l, e
   0083 CDr00r00      [17]  292 	call	___sdcc_call_hl
                            293 ;	genMove_o
                            294 ;	genMove_o
   0086 C1            [10]  295 	pop	bc
                            296 ;	genAssign
                            297 ;	AOP_STK for _cvu_get_lzk_sloc1_1_0
                            298 ;	genMove_o
   0087 DD 75 FE      [19]  299 	ld	-2 (ix), l
                            300 ;	genMove_o
                            301 ;src/cvu_get_lzk.c:43: if(next != state->escape)
                            302 ;	genPlus
                            303 ;fetchPairLong
   008A 59            [ 4]  304 	ld	e, c
   008B 50            [ 4]  305 	ld	d, b
   008C 13            [ 6]  306 	inc	de
   008D 13            [ 6]  307 	inc	de
                            308 ;	genPointerGet
                            309 ;	AOP_STK for _cvu_get_lzk_sloc2_1_0
   008E 1A            [ 7]  310 	ld	a, (de)
   008F DD 77 FF      [19]  311 	ld	-1 (ix), a
                            312 ;	genCmpEq
                            313 ;	AOP_STK for _cvu_get_lzk_sloc1_1_0
                            314 ;	AOP_STK for _cvu_get_lzk_sloc2_1_0
   0092 DD 7E FE      [19]  315 	ld	a, -2 (ix)
   0095 DD 96 FF      [19]  316 	sub	a, -1 (ix)
   0098 28 11         [12]  317 	jr	Z,00104$
                            318 ; peephole 163 changed absolute to relative conditional jump.
                            319 ; peephole 81 removed jp by using inverse jump logic
                            320 ; peephole 158 removed unused label 00132$.
                            321 ;src/cvu_get_lzk.c:45: ringbuffer_insert(state, next);
                            322 ;	genIpush
                            323 ;	AOP_STK for _cvu_get_lzk_sloc1_1_0
   009A DD 7E FE      [19]  324 	ld	a, -2 (ix)
   009D F5            [11]  325 	push	af
   009E 33            [ 6]  326 	inc	sp
                            327 ;	genIpush
   009F C5            [11]  328 	push	bc
                            329 ;	genCall
   00A0 CDr00r00      [17]  330 	call	_ringbuffer_insert
   00A3 F1            [10]  331 	pop	af
   00A4 33            [ 6]  332 	inc	sp
                            333 ;src/cvu_get_lzk.c:46: return(next);
                            334 ;	genRet
                            335 ;	AOP_STK for _cvu_get_lzk_sloc1_1_0
   00A5 DD 6E FE      [19]  336 	ld	l, -2 (ix)
   00A8 C3r2Er01      [10]  337 	jp	00110$
                            338 ;	genLabel
   00AB                     339 00104$:
                            340 ;src/cvu_get_lzk.c:49: next = state->input();
                            341 ;	genPointerGet
                            342 ;fetchPairLong
   00AB 69            [ 4]  343 	ld	l, c
   00AC 60            [ 4]  344 	ld	h, b
   00AD 7E            [ 7]  345 	ld	a, (hl)
   00AE 23            [ 6]  346 	inc	hl
   00AF 66            [ 7]  347 	ld	h, (hl)
   00B0 6F            [ 4]  348 	ld	l, a
                            349 ;	genCall
   00B1 C5            [11]  350 	push	bc
   00B2 D5            [11]  351 	push	de
                            352 ;fetchPairLong
   00B3 CDr00r00      [17]  353 	call	___sdcc_call_hl
                            354 ;	genMove_o
                            355 ;	genMove_o
   00B6 D1            [10]  356 	pop	de
   00B7 C1            [10]  357 	pop	bc
                            358 ;	genAssign
                            359 ;	AOP_STK for _cvu_get_lzk_sloc3_1_0
                            360 ;	genMove_o
                            361 ;	genMove_o
                            362 ;src/cvu_get_lzk.c:51: if(!next)
                            363 ;	genIfx
                            364 ;	AOP_STK for _cvu_get_lzk_sloc3_1_0
                            365 ; peephole 33 loaded a from l instead of going through -1 (ix).
   00B8 DD 75 FF      [19]  366 	ld	-1 (ix), l
   00BB 7D            [ 4]  367 	ld	a, l
   00BC B7            [ 4]  368 	or	a, a
   00BD 20 0F         [12]  369 	jr	NZ,00106$
                            370 ; peephole 164 changed absolute to relative conditional jump.
                            371 ;src/cvu_get_lzk.c:53: ringbuffer_insert(state, state->escape);
                            372 ;	genPointerGet
   00BF 1A            [ 7]  373 	ld	a, (de)
                            374 ;	genIpush
   00C0 D5            [11]  375 	push	de
   00C1 F5            [11]  376 	push	af
   00C2 33            [ 6]  377 	inc	sp
                            378 ;	genIpush
   00C3 C5            [11]  379 	push	bc
                            380 ;	genCall
   00C4 CDr00r00      [17]  381 	call	_ringbuffer_insert
   00C7 F1            [10]  382 	pop	af
   00C8 33            [ 6]  383 	inc	sp
   00C9 D1            [10]  384 	pop	de
                            385 ;src/cvu_get_lzk.c:54: return(state->escape);
                            386 ;	genPointerGet
   00CA 1A            [ 7]  387 	ld	a, (de)
                            388 ;	genRet
                            389 ;	genMove_o
   00CB 6F            [ 4]  390 	ld	l, a
                            391 ;	genMove_o
   00CC 18 60         [12]  392 	jr	00110$
                            393 ; peephole 162 changed absolute to relative unconditional jump.
                            394 ;	genLabel
   00CE                     395 00106$:
                            396 ;src/cvu_get_lzk.c:57: state->offset = 0;
                            397 ;	genPlus
                            398 ;fetchPairLong
                            399 ;fetchLitPair
   00CE 21 04 00      [10]  400 	ld	hl, #0x0004
   00D1 09            [11]  401 	add	hl, bc
   00D2 EB            [ 4]  402 	ex	de, hl
                            403 ;	genAssign (pointer)
                            404 ;	isBitvar = 0
   00D3 AF            [ 4]  405 	xor	a, a
   00D4 12            [ 7]  406 	ld	(de), a
                            407 ;src/cvu_get_lzk.c:58: if(!(next & 0xf))
                            408 ;	genAnd
                            409 ;	AOP_STK for _cvu_get_lzk_sloc3_1_0
   00D5 DD 7E FF      [19]  410 	ld	a, -1 (ix)
   00D8 E6 0F         [ 7]  411 	and	a, #0x0f
                            412 ; peephole 81 removed jp by using inverse jump logic
                            413 ; peephole 158 removed unused label 00133$.
   00DA 20 26         [12]  414 	jr	NZ,00108$
                            415 ; peephole 164 changed absolute to relative conditional jump.
                            416 ; peephole 82 removed jp by using inverse jump logic
                            417 ; peephole 158 removed unused label 00134$.
                            418 ;src/cvu_get_lzk.c:60: state->left = ((next >> 4) & 0x3);
                            419 ;	genRightShift
                            420 ;	AOP_STK for _cvu_get_lzk_sloc3_1_0
   00DC DD 7E FF      [19]  421 	ld	a, -1 (ix)
   00DF 07            [ 4]  422 	rlca
   00E0 07            [ 4]  423 	rlca
   00E1 07            [ 4]  424 	rlca
   00E2 07            [ 4]  425 	rlca
   00E3 E6 0F         [ 7]  426 	and	a, #0x0f
                            427 ;	genAnd
   00E5 E6 03         [ 7]  428 	and	a, #0x03
                            429 ;	genAssign (pointer)
                            430 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            431 ;	isBitvar = 0
                            432 ;fetchPairLong
   00E7 E1            [10]  433 	pop	hl
   00E8 E5            [11]  434 	push	hl
   00E9 77            [ 7]  435 	ld	(hl), a
                            436 ;src/cvu_get_lzk.c:61: state->offset = (next >> 6);
                            437 ;	genRightShift
                            438 ;	AOP_STK for _cvu_get_lzk_sloc3_1_0
   00EA DD 7E FF      [19]  439 	ld	a, -1 (ix)
   00ED 07            [ 4]  440 	rlca
   00EE 07            [ 4]  441 	rlca
   00EF E6 03         [ 7]  442 	and	a, #0x03
                            443 ;	genAssign (pointer)
                            444 ;	isBitvar = 0
   00F1 12            [ 7]  445 	ld	(de), a
                            446 ;src/cvu_get_lzk.c:62: next = state->input();
                            447 ;	genPointerGet
                            448 ;fetchPairLong
   00F2 69            [ 4]  449 	ld	l, c
   00F3 60            [ 4]  450 	ld	h, b
   00F4 7E            [ 7]  451 	ld	a, (hl)
   00F5 23            [ 6]  452 	inc	hl
   00F6 66            [ 7]  453 	ld	h, (hl)
   00F7 6F            [ 4]  454 	ld	l, a
                            455 ;	genCall
   00F8 C5            [11]  456 	push	bc
   00F9 D5            [11]  457 	push	de
                            458 ;fetchPairLong
   00FA CDr00r00      [17]  459 	call	___sdcc_call_hl
                            460 ;	genMove_o
                            461 ;	genMove_o
   00FD D1            [10]  462 	pop	de
   00FE C1            [10]  463 	pop	bc
                            464 ;	genAssign
                            465 ;	AOP_STK for _cvu_get_lzk_sloc3_1_0
                            466 ;	genMove_o
   00FF DD 75 FF      [19]  467 	ld	-1 (ix), l
                            468 ;	genMove_o
                            469 ;	genLabel
   0102                     470 00108$:
                            471 ;src/cvu_get_lzk.c:65: state->left += (next & 0xf);
                            472 ;	genPointerGet
                            473 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            474 ;fetchPairLong
   0102 E1            [10]  475 	pop	hl
   0103 E5            [11]  476 	push	hl
                            477 ;	_moveFrom_tpair_()
   0104 6E            [ 7]  478 	ld	l, (hl)
                            479 ;	genCast
                            480 ;	AOP_STK for _cvu_get_lzk_sloc3_1_0
                            481 ;	genMove_o
   0105 DD 7E FF      [19]  482 	ld	a, -1 (ix)
                            483 ;	genMove_o
                            484 ;	genAnd
   0108 E6 0F         [ 7]  485 	and	a, #0x0f
                            486 ;	genCast
                            487 ;	(locations are the same)
                            488 ;	genPlus
   010A 85            [ 4]  489 	add	a, l
                            490 ;	genAssign (pointer)
                            491 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            492 ;	isBitvar = 0
                            493 ;fetchPairLong
   010B E1            [10]  494 	pop	hl
   010C E5            [11]  495 	push	hl
   010D 77            [ 7]  496 	ld	(hl), a
                            497 ;src/cvu_get_lzk.c:66: state->left++;
                            498 ;	genPointerGet
                            499 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            500 ;fetchPairLong
   010E E1            [10]  501 	pop	hl
   010F E5            [11]  502 	push	hl
                            503 ;	_moveFrom_tpair_()
   0110 7E            [ 7]  504 	ld	a, (hl)
                            505 ;	genPlus
   0111 3C            [ 4]  506 	inc	a
                            507 ;	genAssign (pointer)
                            508 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            509 ;	isBitvar = 0
                            510 ;fetchPairLong
   0112 E1            [10]  511 	pop	hl
   0113 E5            [11]  512 	push	hl
   0114 77            [ 7]  513 	ld	(hl), a
                            514 ;src/cvu_get_lzk.c:67: state->offset += (next >> 4);
                            515 ;	genPointerGet
   0115 1A            [ 7]  516 	ld	a, (de)
   0116 6F            [ 4]  517 	ld	l, a
                            518 ;	genRightShift
                            519 ;	AOP_STK for _cvu_get_lzk_sloc3_1_0
   0117 DD 7E FF      [19]  520 	ld	a, -1 (ix)
   011A 07            [ 4]  521 	rlca
   011B 07            [ 4]  522 	rlca
   011C 07            [ 4]  523 	rlca
   011D 07            [ 4]  524 	rlca
   011E E6 0F         [ 7]  525 	and	a, #0x0f
                            526 ;	genPlus
   0120 85            [ 4]  527 	add	a, l
                            528 ;	genAssign (pointer)
                            529 ;	isBitvar = 0
   0121 12            [ 7]  530 	ld	(de), a
                            531 ;src/cvu_get_lzk.c:69: output:
                            532 ;	genLabel
   0122                     533 00109$:
                            534 ;src/cvu_get_lzk.c:70: state->left--;
                            535 ;	genPointerGet
                            536 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            537 ;fetchPairLong
   0122 E1            [10]  538 	pop	hl
   0123 E5            [11]  539 	push	hl
                            540 ;	_moveFrom_tpair_()
   0124 7E            [ 7]  541 	ld	a, (hl)
                            542 ;	genMinus
   0125 3D            [ 4]  543 	dec	a
                            544 ;	genAssign (pointer)
                            545 ;	AOP_STK for _cvu_get_lzk_sloc0_1_0
                            546 ;	isBitvar = 0
                            547 ;fetchPairLong
   0126 E1            [10]  548 	pop	hl
   0127 E5            [11]  549 	push	hl
   0128 77            [ 7]  550 	ld	(hl), a
                            551 ;src/cvu_get_lzk.c:71: return(ringbuffer_get(state));
                            552 ;	genIpush
   0129 C5            [11]  553 	push	bc
                            554 ;	genCall
   012A CDr2Ar00      [17]  555 	call	_ringbuffer_get
   012D F1            [10]  556 	pop	af
                            557 ;	genMove_o
                            558 ;	genMove_o
                            559 ;	genRet
                            560 ;	genMove_o
                            561 ;	genMove_o
                            562 ;	genLabel
   012E                     563 00110$:
                            564 ;src/cvu_get_lzk.c:72: }
                            565 ;	genEndFunction
   012E DD F9         [10]  566 	ld	sp, ix
   0130 DD E1         [14]  567 	pop	ix
   0132 C9            [10]  568 	ret
                            569 	.area _CODE
                            570 	.area _INITIALIZER
                            571 	.area _CABS (ABS)
